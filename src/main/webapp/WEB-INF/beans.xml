<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.8.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">
	
<!-- 	Enable MVC annotations -->
	<mvc:annotation-driven/>
	
<!-- 	Find Spring Beans -->
	<context:component-scan base-package="com.ex"/>
	
<!-- 
	HOMEPAGE
	http://localhost:8085/forum/ng/forum.html 
-->
  <mvc:resources location="/WEB-INF/ng/" mapping="/ng/**"/>
  
  <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    <property name="prefix" value="/ng/"/>
    <property name="suffix" value=".html"/>
  </bean>
  








	
<!-- 	Enable @Transactional annotation	 -->
	<tx:annotation-driven/>
	
<!-- 	Define DataSource -->
    <bean id="mydataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="java:comp/env/jdbc/PostgreSQLDS"/>
    </bean>
    
<!--     Because we use Hibernate -->
    <bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"></bean>
    
<!--     Because Spring Data doesn't natively support Hibernate (But it does support JPA) -->
    <bean id="entityManagerFactory"  class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">  
        
        <property name="dataSource" ref="mydataSource"/>  
        <property name="packagesToScan" value="com.ex.domain"/>
		<property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter"/>
		<property name="jpaProperties">
				<props>
					<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQL82Dialect</prop>
<!-- 					<prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop> -->
					<prop key="hibernate.show_sql">true</prop>
					<prop key="hibernate.format_sql">true</prop>
					
					<!-- Do not use -->
					<prop key="hibernate.hbm2ddl.auto">update</prop>
					 
				</props>
		</property>
    </bean>  
      
<!--     Because tx are cool -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">  
    	<property name="entityManagerFactory" ref="entityManagerFactory"/>  
    </bean>  
    
<!--     Find JPA Repositories -->
    <jpa:repositories base-package="com.ex"/>








<!-- Spring Security -->
	<security:http use-expressions="true" >
	
		<!-- permitAll -->
		<security:intercept-url pattern="/" method="GET" access="permitAll"/> <!-- home -->
		<security:intercept-url pattern="/user/" method="PUT" access="permitAll"/> <!-- register -->
		<security:intercept-url pattern="/ng/**" method="GET" access="permitAll"/> <!-- static content -->
		
		<!-- ROLE_USER -->
		<security:intercept-url pattern="/**" access="hasRole('ROLE_USER')"/>
		
		<security:http-basic entry-point-ref="restAuthenticationEntryPoint"/>
		<security:custom-filter ref="csrfHeaderFilter" after="CSRF_FILTER"/>
		<security:csrf token-repository-ref="csrfTokenRepository"/>
		<security:logout invalidate-session="true" delete-cookies="JSESSIONID,XSRF-TOKEN" logout-url="/logout/" logout-success-url="/"/>
		
	</security:http>
	
	<security:authentication-manager>
		<security:authentication-provider>
		
			<security:jdbc-user-service 
					data-source-ref="mydataSource"
		  			users-by-username-query=
		    			"select USER_USERNAME, USER_PASSWORD, true from FORUM_USER where USER_USERNAME=?"
		  			authorities-by-username-query=
		    			"select USER_USERNAME, 'ROLE_USER' from FORUM_USER where USER_USERNAME=?  " />
		
<!-- 			<security:user-service> -->
<!-- 				<security:user name="john" password="123" authorities="ROLE_USER" /> -->
<!-- 				<security:user name="amy" password="1234" authorities="ROLE_USER"/> -->
<!-- 				<security:user name="austin" password="12345" authorities="ROLE_DBA"/> -->
<!-- 			</security:user-service> -->
			
		</security:authentication-provider>
	</security:authentication-manager>
	
	<bean id="csrfTokenRepository" class="org.springframework.security.web.csrf.HttpSessionCsrfTokenRepository">
	    <property name="headerName" value="X-XSRF-TOKEN" />
	</bean>
	
</beans>
